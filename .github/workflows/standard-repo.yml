name: Commit Base Checks

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  check-commit-message:
    name: Commit Message Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint commit messages
        run: |
          COMMITS=$(git log origin/main..HEAD --pretty=format:"%s")
          if [ -z "$COMMITS" ]; then
            echo "No new commit messages to check. Skipping commit lint."
            exit 0
          fi
          echo "::group::Commit messages"
          echo "$COMMITS"
          echo "::endgroup::"
          ALLOWED="^(feat|fix|docs|refactor|chore|test|build|ci|revert)\([a-z0-9-]+\): .+ :[a-z0-9_]+:$"
          FAIL=0
          while read -r line; do
            if ! [[ "$line" =~ $ALLOWED ]]; then
              echo "::error::Invalid commit message format: \"$line\""
              echo "::error::Commit messages must match the pattern: <type>(<scope>): <subject> :<emoji>:"
              echo "::error::Example: feat(api): add payment endpoint :sparkles:"
              FAIL=1
            fi
          done <<< "$COMMITS"
          exit $FAIL

  check-readme:
    name: README.md Exists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for README.md
        run: |
          if [ ! -f README.md ]; then
            echo "::error::README.md file is missing! Every repository must include a README.md in the root directory."
            exit 1
          fi

  check-license:
    name: LICENSE Exists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for LICENSE
        run: |
          if [ ! -f LICENSE ]; then
            echo "::error::LICENSE file is missing! Every repository must include a LICENSE file in the root directory."
            exit 1
          fi

  check-gitignore:
    name: .gitignore Exists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for .gitignore
        run: |
          if [ ! -f .gitignore ]; then
            echo "::error::.gitignore file is missing! Every repository must include a .gitignore file in the root directory."
            exit 1
          fi